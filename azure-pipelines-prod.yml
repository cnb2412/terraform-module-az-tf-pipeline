name: $(BuildDefinitionName)$(SourceBranchName)$(date:yyyyMMdd)$(rev:.r)

trigger:
- ${default_branch}

pool:
  vmImage: ubuntu-latest

variables: # terraform variables
  ServiceConnectionName: ${serviceconnection}
  bk-rg-name: ${tf_bk_rg}
  bk-str-account-name: ${tf_bk_sa}
  bk-container-name: ${tf_bk_sc}
  bk-key: 'terraform.tfstate' # key is actually name of the file, determined here
  iac_subscription: ${iac_subscription}
  ARM_USE_OIDC: true
  ARM_CLIENT_ID: ${client_id}
  ARM_TENANT_ID: ${tenant_id}
  ARM_SUBSCRIPTION_ID:  ${deploy_subscription}

stages:
  - stage: terraform_deploy
    displayName: 'Terraform deployment'
    jobs:
      - job: deploy_tf
        steps:
          - task: AzureCLI@2
            displayName: Pre flight
            inputs:
              addSpnToEnvironment: true
              azureSubscription: ${serviceconnection}
              scriptLocation: inlineScript
              scriptType: bash
              inlineScript: |
                set -eu  # fail on error
                # Terraform allow auth via Azure CLI only with user, but not with Service Principle. Thus, this mess
                az account show --query id -o tsv
                echo  -e 'terraform {\n backend "azurerm" {}\n }' > backend.tf
                echo "debug: use oidc $ARM_USE_OIDC"
                echo "debug: use client id  $ARM_CLIENT_ID"
                echo "debug: env subscription  $ARM_SUBSCRIPTION_ID"
          - task: AzureCLI@2 #we need to be loged in to AZ, so we use AzureCLI@2 instead of bash, for backend connection
            displayName: tf init
            inputs:
              azureSubscription: ${serviceconnection}
              scriptLocation: inlineScript
              scriptType: bash
              addSpnToEnvironment: true
              inlineScript: |
                set -eu  # fail on error
                ARM_OIDC_TOKEN=$idToken \
                terraform init \
                -input=false \
                -backend-config=storage_account_name=$(bk-str-account-name) \
                -backend-config=container_name=$(bk-container-name) \
                -backend-config=key=$(Build.Repository.Name).tfstate \
                -backend-config=subscription_id=$(iac_subscription) \
                -backend-config=resource_group_name=$(bk-rg-name)
          - task: AzureCLI@2
            displayName: tf validate
            inputs:
              azureSubscription: ${serviceconnection}
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                set -eu  # fail on error
                terraform validate
          - task: AzureCLI@2
            displayName: tf plan
            inputs:
              azureSubscription: ${serviceconnection}
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                set -eu  # fail on error
                terraform plan \
                -input=false -out=tf_plan.out
          - task: AzureCLI@2
            displayName: tf apply
            inputs:
              azureSubscription: ${serviceconnection}
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                set -eu  # fail on error
                terraform apply -parallelism=2 -input=false -auto-approve tf_plan.out